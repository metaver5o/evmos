version: '3.8'

services:
  node1:
    image: evmos
    container_name: evmos-node1
    ports:
      - "26656:26656"
      - "26657:26657"
      - "1317:1317"
      - "8545:8545"
      - "8546:8546"
    volumes:
      - evmos_data1:/home/evmos/.evmosd
    env_file:
      - .env
    environment:
      - MONIKER=${MONIKER}
      - CHAIN_ID=${CHAIN_ID}
      - KEY_NAME=${KEY_NAME}
      - KEYRING_BACKEND=${KEYRING_BACKEND}
    command: |
      bash -c 'set -ex
      evmosd version
      
      # Initialize the node
      evmosd init $${MONIKER} --chain-id=$${CHAIN_ID} --overwrite
      
      # Replace all instances of aevmos with ucash in genesis.json
      echo "Replacing all instances of aevmos with ucash in genesis.json..."
      sed -i "s/aevmos/ucash/g" /home/evmos/.evmosd/config/genesis.json
      
      # Verify the changes
      echo "Verifying bond_denom is set to ucash..."
      grep "bond_denom" /home/evmos/.evmosd/config/genesis.json
      
      echo "Checking for any remaining instances of aevmos..."
      grep "aevmos" /home/evmos/.evmosd/config/genesis.json || echo "No instances of aevmos found"
      
      echo "Counting ucash instances..."
      grep -o "ucash" /home/evmos/.evmosd/config/genesis.json | wc -l
      
      # Generate a key non-interactively without passphrase
      echo "Generating key without passphrase..."
      evmosd keys add $${KEY_NAME} --keyring-backend=$${KEYRING_BACKEND} --no-backup
      
      EVMOS_ADDRESS=$$(evmosd keys show $${KEY_NAME} -a --keyring-backend=$${KEYRING_BACKEND})
      evmosd add-genesis-account $${EVMOS_ADDRESS} 2000000000000ucash --keyring-backend=$${KEYRING_BACKEND}
      
      # Create gentx without passphrase
      evmosd gentx $${KEY_NAME} 1000000000000ucash --chain-id=$${CHAIN_ID} --keyring-backend=$${KEYRING_BACKEND} --yes
      
      evmosd collect-gentxs
      
      # Replace any remaining instances in config files and genesis again after all operations
      echo "Final replacement of any remaining aevmos instances..."
      find /home/evmos/.evmosd/config -type f -exec sed -i "s/aevmos/ucash/g" {} \;
      
      # Start the node
      exec evmosd start --json-rpc.enable --json-rpc.address=0.0.0.0:8545 --api.enable'

  node2:
    image: evmos
    container_name: evmos-node2
    depends_on:
      - node1
    ports:
      - "26658:26656"
      - "26659:26657"
      - "1318:1317"
      - "8547:8545"
      - "8548:8546"
    volumes:
      - evmos_data2:/home/evmos/.evmosd
    env_file:
      - .env
    environment:
      - MONIKER=${MONIKER_NODE2}
      - CHAIN_ID=${CHAIN_ID}
      - KEY_NAME=${KEY_NAME_NODE2}
      - KEYRING_BACKEND=${KEYRING_BACKEND}
      # Use the mnemonic generated by node1
      - KEY_MNEMONIC=liberty swarm huge blanket clerk aisle awesome eager diesel social burden arm alarm fluid two despair coil area option guard stairs credit street guess
    command: |
      bash -c 'set -ex
      evmosd init $${MONIKER_NODE2} --chain-id=$${CHAIN_ID} --overwrite
      
      # Replace all instances of aevmos with ucash in the initial genesis
      echo "Replacing all instances of aevmos with ucash in initial genesis.json..."
      sed -i "s/aevmos/ucash/g" /home/evmos/.evmosd/config/genesis.json
      
      echo "$${KEY_MNEMONIC}" > /tmp/mnemonic_node2.txt
      
      # Use --no-backup to avoid interactive prompts
      evmosd keys add $${KEY_NAME_NODE2} --recover --keyring-backend=$${KEYRING_BACKEND} --source /tmp/mnemonic_node2.txt --no-backup
      
      rm -f /tmp/mnemonic_node2.txt
      
      echo "Waiting for node1..."
      sleep 10
      until curl -s http://node1:26657/status > /dev/null; do sleep 1; done
      
      echo "Copying genesis from node1..."
      curl -s http://node1:26657/genesis | jq -r ".result.genesis" > /tmp/genesis.json
      
      # Apply sed replacement to the copied genesis before moving it to final location
      echo "Replacing all instances of aevmos with ucash in copied genesis.json..."
      sed -i "s/aevmos/ucash/g" /tmp/genesis.json
      
      # Move the modified genesis to the final location
      mv /tmp/genesis.json /home/evmos/.evmosd/config/genesis.json
      
      # Verify denominations in copied genesis
      echo "Verifying denominations in genesis.json:"
      grep "aevmos" /home/evmos/.evmosd/config/genesis.json || echo "No instances of aevmos found"
      grep -o "ucash" /home/evmos/.evmosd/config/genesis.json | wc -l
      
      # Replace any remaining instances in all config files
      echo "Final replacement of any remaining aevmos instances..."
      find /home/evmos/.evmosd/config -type f -exec sed -i "s/aevmos/ucash/g" {} \;
      
      NODE1_ID=$$(curl -s http://node1:26657/status | jq -r ".result.node_info.id")
      sed -i "s|persistent_peers = \"\"|persistent_peers = \"$${NODE1_ID}@node1:26656\"|g" /home/evmos/.evmosd/config/config.toml
      
      exec evmosd start --json-rpc.enable --json-rpc.address=0.0.0.0:8545 --api.enable'

volumes:
  evmos_data1:
  evmos_data2:
